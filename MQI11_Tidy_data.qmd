---
title: "Tidy data"
subtitle: "Metodologia Quantitativa I (UPF)"
author: "Jordi Mas Elias"
institute: "<https://www.jordimas.cat/>"
footer: "Metodologia Quantitativa I (UPF)"
logo: logo-upf.png
bibliography: [references.bib, packages.bib]
format: 
  revealjs:
    embed-resources: true
    slide-number: true
    show-slide-number: print
    theme: simple
editor: source
editor_options: 
  chunk_output_type: console
---

## Sumari

-   Introducció
-   Dades desordenades
-   Dades perdudes
-   Dades separades
-   Codis i llibres de codis

```{r echo = F, message=F, warning=F}
library(tidyverse)
library(readxl)
library(countrycode)
elecc19 <- readRDS("data/elecc19.rds")
festivals <- readRDS("data/festivals.rds")
lloguer_any <- readRDS("data/lloguer_any.rds")
cens_gc <- readRDS("data/cens_gc.rds")
municipi <- readRDS("data/municipi.rds")
rendacs <- readRDS("data/rendacs.rds")
contractes_menors <- readRDS("data/contractes_menors.rds")
```

# Warm up {background-color="#e8e8e8"}

## Warm up

Data wrangling

![](img/minority.gif)


## Corba d'aprenentatge d'R

```{r}
library(dplyr)
library(ggplot2)
rlc <- tibble(class = 1:8,
             knowledge = (1:8)^3)
lesson <- 8
rlc |> 
  ggplot(aes(x = class, y = knowledge)) +
  geom_line(size = 1) +
  annotate("text", x = 4.5, y = 375, label = "?", size = 12) +
  theme_minimal() +
  labs(x = "Class number", y = "Knowledge", title = "The R Knowledge curve")
```


## Warm up

```{r}
rlc <- tibble(class = 1:100,
              knowledge = (1:100)^3)
lesson <- 10

rlc |> 
  ggplot(aes(x = class, y = knowledge)) +
  geom_line() +
  geom_point(data = rlc |> 
               filter(class == lesson), col = "red") +
  annotate("text", x = 36, y = 260000, label = "You are here!") +
  geom_curve(aes(x = 25, xend = 9.8, 
                 y = 250000, yend = 15000),
             arrow = arrow(length = unit(0.08, "inch")), size = 0.5,
             color = "gray40", curvature = 0.3) +
  theme_minimal() +
  labs(x = "Class number", y = "Knowledge", title = "The R Knowledge curve")
```

## Warm up

**Instal·lar paquets**

```{r eval = F, echo = T, message=F, warning=F}
install.packages(c("dplyr", "ggplot2", "readr", "tidyr", 
                   "countrycode", "janitor", "readxl", 
                   "wbstats", "naniar", "haven", "Hmisc"))
```


## Warm up

**Carregar packages**

```{.r code-line-numbers="4"}
library(dplyr)
library(ggplot2)
library(readr)
library(tidyr)
library(countrycode)
library(janitor)
library(readxl)
library(wbstats)
library(naniar)
library(haven)
library(Hmisc)
```

![](img/r-packages.png){style="float:center;" width="650"}





# Introducció {background-color="#e8e8e8"}

## Introducció

> "Data Scientists spend up to 80% of the time on data cleaning and 20% on actual data analysis".

![Source: R for Data Science](img/whole-game.png)


## Introducció {.scrollable}

A _df_ is *tidy* if it fulfills these requirements [@Wickham2014]:

![](img/wickham.jpeg){style="float:right;" width="300"}

::: columns
::: {.column width="70%"}

- Each _df_ has one **unit of observation**.
- **Observations** represented in the rows.
- **Variables** represented in the columns.
- Each **cell** indicates a value.
:::

::: {.column width="25%"}
:::

![Source: R for Data Science](img/tidydata.png)
:::

## Introduction  {.smaller}

Però ...

**Vots a partits polítics a les eleccions de 2019**

```{r}
elecc19 |>
  select(provincia = nombre_de_provincia, municipio = nombre_de_municipio, votos_validos, pp, cs, podemos_iu, mas_pais, eb, pacma) |> 
  head(15)
```

## Introducció  {.smaller}

Però ...

**Contractes menors a Barcelona**

```{r}
contractes_menors |> 
  filter(data_adjudicacio == "2918-11-19" | is.na(data_adjudicacio)) |> 
  select(ens = tipus_ens, contracte = tipus_contracte, data = data_adjudicacio,
         proveidor, import = import_adjudicat) |> 
  head(15)
```

## Introducció {.smaller}

Però ...


::: columns
::: {.column width="50%"}
**Preu del lloguer**

```{r}
lloguer_any |> 
  select(nom_barri, preu, preu_m2) |> 
  head(15)
```
:::

::: {.column width="10%"}

:::

::: {.column width="40%"}
**Ingrés per càpita**
```{r}
rendacs |> 
  select(nom_barri, sc = seccio_censal, import_euros) |> 
  head(15)
```

:::


:::



## Introducció

Normalment, les dades no estan _netes_ perquè:

- **Desordenades:** Les variables no es troben a les columnes.
- **Perdudes:** Les cel·les contenen un valor.
- **Separades:** Les observacions es troben en varis _datasets_.




# Dades desordenades {background-color="#e8e8e8"}


## Tidy data? {.smaller}

Nombre de casos de tuberculosi documentats per la OMS a Afganistan, Brasil i la Xina entre 1999 i 2000 (casos de TB i població) (exemple extret de @R-tidyr).

:::: {.columns}

::: {.column width="50%"}
Taula A
```{r}
table3
```

Taula B
```{r}
table1
```
:::

::: {.column width="50%"}
Taula C

```{r}
table2
```

Taula D
```{r}
table4a
```
:::
::::



## Pivotar dades

Canviem les files i les columnes del marc de dades, mantenint la mateixa informació.

- Pivot longer: `pivot_longer(df, cols, names_to, values_to)`
- Pivot wider: `pivot_wider(df, names_from, values_from)`
- Separate: `separate(df, col, into, sep)`
- Unite: `unite(df, col, ..., sep)`


## Per què les dades no estan netes?

Tres raons, entre altres:

- Estalviar memòria (veure [IGO dataset](https://correlatesofwar.org/data-sets/igos/){target="_blank"})
- Mentalitat 'Excel'.
- Revolució _tidyverse_^[Més exemples disponibles al paquet `tidyr::`.].




#  Dades perdudes {background-color="#e8e8e8"}

## Què són les dades perdudes?

Zero vs. NA (Not Available)

![](https://preview.redd.it/3370lkxk56ny.jpg?width=960&crop=smart&auto=webp&s=61a1bae1128914c9c7fc1eb0b02cc44189e78a5f)


## Per què les dades estan perdudes?

Categories especials: Fora de l'escala.

```{r}
nig <-read_csv("data/nig.csv")
nig |> 
  select(age, language, situation_country, situation_personal)
```

## Per què les dades estan perdudes?

Categories especials: Difícil de classificar.

```{r}
polity <- read_xls("data/p5v2018.xls")
polity |>
  select(ccode, scode, country, year, polity, polity2) |>
  filter(year > 1990, country == "South Africa")
```

## Per què les dades estan perdudes?

No les hem pogut recollir o valor estrany/extrem.

```{r}
lloguer_any |> 
  rename(trim = trimestre, codi_dist = codi_districte, districte = nom_districte) |> 
  filter(preu < 260)
```


## Per què les dades estan perdudes?

La unió de diferents marcs de dades tendeix a produir `NA`.

- Ho veurem d'aquí una estona...


## Què fer amb les dades perdudes?

Algunes funcions:

- `summary()` per explorar.
- `is.na()` és útil quan filtrem dades.
- `na.rm = TRUE` argument en funcions de sumari.
- `replace_na()` assigna un valor als NAs.
- `naniar::vis_miss()` (compte!!!)


## Què fer amb les dades perdudes?

El gran problema arriba quan la raó per la qual les dades estan perdues està relacionat amb allò que estem estudiant^[Justament, ens estem perdent la història que volem explicar]:

- Per què els estudiants no venen a classe? 
- Per què hi ha pobresa al món? 



# Dades separades {background-color="#e8e8e8"}

## Dades separades

```{r echo = T, eval = F}
xxxx_join(df1, 
          df2, 
          by = c("join_variable_df1" = "join_variable_df2"))
```

- `full_join()`
- `left_join()`
- `right_join()`
- `inner_join()`



## Dades separades

![](https://www.csestack.org/wp-content/uploads/2020/10/sql-table-joins.png)

## Unitats territorials i partits polítics

- Estats: [Countrycode](https://www.rdocumentation.org/packages/countrycode/versions/1.4.0/topics/countrycode){target="_blank"}, [ISO 3166-1](https://www.iso.org/iso-3166-country-codes.html){target="_blank"}, [Eurostat](https://ec.europa.eu/eurostat/statistics-explained/index.php?title=Glossary:Country_codes){target="_blank"}.
- Regions (supranacionals): [UN](https://population.un.org/wpp/DefinitionOfRegions/){target="_blank"}.
- Organitzacions intergovernamentals: [COW](https://correlatesofwar.org/data-sets/igos/){target="_blank"}
- Partits polítics: [Party facts](https://partyfacts.herokuapp.com){target="_blank"}.
- Regions (subestatals): [NUTS](https://www.idescat.cat/codis/?id=52&n=1&lang=es){target="_blank"} / [ISO 3166-2](https://www.iso.org/obp/ui/es/#iso:code:3166:ES){target="_blank"}.
- Municipis: [IDESCAT](https://www.idescat.cat/codis/?id=50&n=9){target="_blank"}, [INE](https://www.ine.es/daco/daco42/codmun/codmunmapa.htm){target="_blank"}.
- Seccions censals: [IDESCAT](https://www.idescat.cat/codis/?id=50&n=81).



# Llibres de codis {background-color="#e8e8e8"}

## Llibres de codis

Examples:

- CHES dataset: [Web](https://www.chesdata.eu/ches-europe){target="_blank"} 
- UCDP: [Web](https://ucdp.uu.se/downloads/){target="_blank"}
- World Bank `wbstats` package.



## Bibliografia {background-color="#e8e8e8"}
