---
output: html_document
editor_options: 
  chunk_output_type: console
---
# Dades perdudes
```{r echo = F, message=F}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE,
                      message = FALSE)
library(pacman)
p_load(tidyverse, readxl, janitor, foreign, haven, WDI, knitr, naniar, simputation)
theme_set(theme_minimal())
wb_recod <- read_csv("files/wb_recod.csv")
```

## Introducció

Una característica que tenen els conjunts de dades és que a cada observació li correspon un valor concret en una variable determinada. Aquest principi, però, es trenca sovint quan alguns valors, per alguna raó, no existeixen o tenen una codificació que no és comuna a la del tipus de variable en qüestió. A aquests valors en direm **dades perdudes** (_missing data_ o també dits valors perduts), que apareixen normalment codificades com a `NA` (_Not Available_, no disponible), però que poden prendre la forma de gairebé qualsevol tipus de valor. Un exemple de com són aquests valors el tenim a la @tbl-missing, que mostra el percentatge de dones amb educació bàsica que al 2020 estaven a l'atur en diversos països. Fixem-nos que la majoria de valors de la variable d'interès (columna `fem_unempl`) apareixen com a `NA`.  


```{r echo = F}
#| column: page-inset-left
#| tbl-cap: Percentatge de dones a l'atur amb educació bàsica (2020)
#| label: tbl-missing
#WDI::WDIsearch("unemployment.*basic")
#missing <- WDI(country = "all", indicator = "SL.UEM.BASC.FE.ZS", start = 2020, end = 2020, extra = TRUE)
#write_csv(missing, "files/missing.csv")
missing <- read_csv("files/missing.csv") |> 
  rename(fem_unempl = SL.UEM.BASC.FE.ZS) |> 
  filter(region != "Aggregates") |> 
  select(iso3c, country, fem_unempl, region, capital, income)
missing |> 
  head(10) |> 
  kable()
```

::: {.callout-tip appearance="minimal"}
::: {#exr-forcats}
## Dades perdudes
Descarrega l'arxiu `missing.csv` i converteix-lo en l'objecte `missing`.
:::
:::

Com veieu, moltes d’aquestes dades estan perdudes: hi haurien de ser però no hi són. Tant a Algèria com a Andorra, hi ha població femenina. Algunes dones en aquests països tenen estudis primaris, de les quals una part estan a l'atur. Això vol dir que aquesta dada hauria d'existir, però pel motiu que sigui no la tenim comptabilitzada. 

En aquest mòdul veurem quins poden ser els motius de perquè les dades estan perdudes. Segons quin sigui el motiu, tractarem aquestes dades d'una manera o d'una altra. Però el primer que cal fer és detectar-les, cosa que no sempre és fàcil perquè una dada perduda pot prendre la forma de qualsevol valor. Si tenim sort ens apareixeran amb el símbol `NA`, però també ens poden aparèixer com a `N/A`, `NaN` (Not a Number), com a valor numèric, o com a _string_ amb alguna paraula com "N/A", "missing" o simplement amb una casella en blanc.

::: {.column-margin}
::: {.callout-note}
## Tipus de NA
Cal distingir les dades perdudes (`NA`) dels valors infinits, senyalitzats amb `Inf`, i dels valors que no són nombres, senyalitzats amb `NaN` (Not a Number).
:::
:::



<div class="alert alert-secondary" role="alert">
Les **dades perdudes** o valors perduts són valors que no han estat registrats però ho haurien d’haver estat.
</div>



## Identificar dades perdudes

Com acabem d'explicar, les dades perdudes són punyeteres perquè poden prendre la forma de qualsevol valor. Identificar-les si estan codificades com a `NA` és relativament senzill, perquè R té moltes funcions que ajuden a detectar-los. Però el problema sorgeix quan estan amagades darrere un valor numèric o de caràcter, com veurem a continuació.

### NA

Al llarg d'aquests mòduls ja hem vist alguns conjunts de dades amb els seus valors perduts codificats com a `NA`: en la EPR dataset (@tbl-epr, variable `reg_aut`), la Global Terrorism Database (@tbl-gtd, variable `weapdetail`) i la Formal Alliances dataset (@tbl-ally, variable `dyad_end_year`).

Quan estan codificades com a `NA` és relativament senzill detectar les dades perdudes, perquè tenim moltes funcions que ens permeten identificar-les. Una de les més emprades és `summary()`, que es pot aplicar tant a marcs de dades com a vectors i ens permet a més fer una exploració general dels principals estadístics descriptius d'una variable. Si la variable té dades perdudes codificades com a `NA`, R ens retornarà una fila extra a la descripció de la variable indicant el nombre de valors que coincideixen amb aquesta codificació. A continuació observem que la variable `fem_unempl` té 128 dades perdudes comptabilitzades com a `NA`.

```{r}
summary(missing$fem_unempl)
```

La funció per excel·lència per detectar `NA` és `is.na()`, que ens retorna l'objecte amb els valors perduts marcats com a TRUE i com a FALSE la resta de valors. Aquesta funció la podem combinar amb altres operacions per extreure informació sobre els `NA`.

::: {.panel-tabset}

## any

Combinada amb `is.na()`, la funció `any()` ens permet, simplement, preguntar si hi ha algun valor perdut. R ens retornarà TRUE si tenim alguna dada perduda i FALSE si no en tenim cap.

```{r}
any(is.na(missing))
```

Aquesta combinació de funcions es pot aplicar tant a marcs de dades com a vectors.

## sum

Combinada amb `is.na()`, la funció `sum()` permet demanar que ens compti la quantitat de dades perdudes d'un objecte. R ens sumarà la quantitat de TRUE.

```{r}
sum(is.na(missing))
```

Aquesta combinació de funcions es pot aplicar tant a marcs de dades com a vectors.

## any_na

La funció `any_na(x)` del paquet `naniar`, 

```{r}
any_na(missing)
```

## which

Per identificar a quina fila es troba exactament cada un d’aquests NA, podem utilitzar `which(is.na())`, que ens retornarà un vector numèric amb la posició de les files que tenen dades perdudes de la variable indicada. És preferible utilitzar-lo sobre un vector.

```{r}
which(is.na(missing$fem_unempl))
```


Amb l'eina de selecció, podem seleccionar les files que són `NA`.

```{r}
missing[which(is.na(missing$fem_unempl)),]
```

## glimpse_na

```{r}
simputation::glimpse_na(missing)
```


:::

El paquet d'R `naniar`, destinat específicament al tractament de dades perdudes, conté moltes funcions per detectar `NA`. Una de les més interessants és `vis_miss()`, que crea una visualització que marca amb negre dels `NA` i amb gris la resta de valors. Com veiem a la @fig-vis-miss del lateral, hi ha un 10.3% de dades perdudes al marc de dades `missing`, la major part de les quals pertanyen a la variable `fem_unempl`. Una petita part de `NA` estan localitzades a la variable `capital`.

```{r}
#| column: margin
#| fig-cap: Funció vis_miss() de naniar
#| label: fig-vis-miss
vis_miss(missing)
```

S'ha d'anar alerta amb la funció `vis_miss()`, perquè consumeix molta memòria, en especial quan l'utilitzem en marcs de dades que contenen milions de valors. 

- `miss_scan_count()`



### Valors extrems

A les variables numèriques, les dades perdudes prenen a vegades la forma d'un valor numèric que està fora del que podem considerar normal en la distribució. Són valors que considerem extrems (_outliers_), perquè per algun motiu es troben allunyats de la resta de valors de la distribució en una magnitud que va més enllà del què podem esperar de la variable. Distingirem dos tipus de valors extrems: quan aquests valors extrems són voluntaris, conseqüència d'una decisió deliberada en el procés de codificació de les dades, o involuntaris, conseqüència d'errors en el procés de creació de les dades.

```{r echo = FALSE}
#| label: tbl-polity
#| tbl-cap: Polity V Annual Time-Series, 1946-2018
#| column: margin
polity <- read_xls("../../DataIP/Datasets/p5v2018.xls")
polity |> 
  filter(country %in% c("Tunisia", "Bosnia", "Myanmar (Burma)", "Haiti"),
#         polity %in% c(-88, -66),
         between(year, 2013, 2017)) |> 
  select(country, year, polity) |> 
  knitr::kable()
```   

Pel què fa als valors extrems voluntaris, aquests acostumen a ser **codificacions especials** que han utilitzat els codificacions de la base de dades que estem utilitzant. Vegem, per exemple, la base de dades [Polity V](https://www.systemicpeace.org/polityproject.html){target="_blank"} [@Marshall2020], que com anteriorment hem explicat classifica els règims polítics segons el seu nivell de democràcia, sent 10 el nivell màxim i -10 el nivell mínim de democràcia. A la @tbl-polity del lateral observem com el personal de codificació de Polity han classificat algunes observacions (Bòsnia, Haití, Myanmar i Tunísia) entre els anys 2013 i 2017. Fixem-nos que alguns valors de la variable `polity` no corresponen amb l'escala que acabem de descriure. Bòsnia té a tots els anys el valor -66, mentre que Haití alterna entre -77 i -88 i només l'any 2017 té un any que correspon amb l'escala. Myanmar i Tunísia són classificats com a -88 en un any. Si ens fixem amb el [llibre de codis](https://www.systemicpeace.org/polity/keynew.htm){target="_blank"} de Polity V, veurem que aquests valors són codificacions especials quan són règims en transició (codi -88), interrupció del règim (codi -66) o període interregnum (codi -77)

Hi ha molts altres exemples en altres bases de dades de valors que es podrien considerar perduts perquè escapen de l'escala habitual de la variable. Un cas molt típic és el de les enquestes d'opinió, en què se sol codificar com a 98 i 99 o algun valor similar les preguntes en què la persona enquestada "No Sap" o "No Contesta". Anteriorment ja hem vist un cas de dades perdudes d'aquest tipus: la Intergovernmental Organizations dataset (v3) (diversos estats, @tbl-igo) codifica les dades perdudes amb el valor -9.

La millor manera per detectar aquests valors numèrics és amb un histograma. L'histograma permet visualitzar la distribució dels valors d’una variable numèrica. Com veiem, la majoria de valors es troben entre l'interval entre -10 i +10, com cal esperar. Però alguns altres valors estan fora de l'escala, fet que ens dona una prova important que són dades perdudes. 

```{r}
#| fig-width: 9
#| fig-height: 4
hist(polity$polity)
```

A dins de `naniar` trobem guardat l'objecte `common_na_numbers`, que emmagatzema alguns dels formats més habituals que pot prendre una dada perduda a dins d'un vector numèric^[Com podem observar, no és una classificació exhaustiva perquè no inclou, entre d'altres, les codificacions especials de la Polity V].

```{r}
naniar::common_na_numbers
```


A diferència de les dades de Polity que hem vist anteriorment, hi ha valors extrems que poden respondre a **errors en les dades**.


Una manera alternativa d’identificar casos extrems és visualitzant la distribució d’una variable. Normalment amb hist() o plot() podrem comprovar si hi ha valors que se surten de la norma. Un cop els tenim identificats, el procediment torna a ser el mateix que pel cas dels NA. Per exemple, hem trobat en una altra font que el PIB per càpita de Singapur l’any 1991 era de 11.463 dòlars. Podem utilitzar aquest valor al marc de dades: `md$gap_cap[which(md$gdp_cap < 0)] <- 11463`.


No hi ha cap solució màgica per trobar els valors extrems però amb un sumari podem detectar a vegades valors que s’escapen de tota lògica. El més important és fer una lectura atenta de les dades, explorar cada variable i pensar si té sentit que les dades tinguin el valor que tenen. Alguns errors són fàcils de detectar. Si sabem, per exemple, que l’esperança de vida mitjana oscil·la normalment entre 50 i 82 anys, ens sorprendrà molt si trobem un valor a 900. Difícilment, també, un país tindrà un PIB per càpita negatiu. Per tant, el més important és un esforç inicial per conèixer a fons què mesuren les variables que volem treballar, quines unitats de mesura utilitzen i entre quins valors acostumen a oscil·lar aquestes unitats.

Fixem-nos bé en el sumari que hem cridat a la secció anterior. El valor mínim de la variable `md$gdp_cap` és negatiu i que sapiguem, els PIB per càpita no acostumen a ser negatius. També observem que el valor màxim supera els 200.000 dòlars per habitant i, que sapiguem, cap país acostuma a superar els 100.000. Novament podem utilitzar la funció `which()` per identificar la fila o files que tenen valors poc habituals. En el primer cas hem seleccionat les files amb valors negatius de la variable md$gdp_cap, mentre que en el segon cas hem buscat els valors extrems de dues maneres: mirant quins valors són superiors a 100.000 o directament anant a buscar el número concret que havíem trobat a partir de la funció summary().





### Categories especials

En el cas dels vectors de caràcter o els factors, les dades perdudes poden venir codificades de forma molt diferent. Un exemple que hem vist anteriorment és a la @tbl-wbincome, que mostrava la classificació de països segons nivell de renda del Banc Mundial. La darrera variable, `lending_category`, codifica amb `..` algunes observacions quan no té informació.

Una manera de detectar dades perdudes en vectors de caràcter o factors és observar les categories de la variable amb `table()` o `unique()`. Com veiem, `lending_category` conté quatre categories diferents: `Blend`, `IBRD`, `IDA` i `..`. Podem suposar amb prou seguretat que `..` és un valor perdut.

```{r}
table(wb_recod$lending_category)
```

Seleccionem les observacions que 

```{r}
wb_recod$lending_category[wb_recod$lending_category == ".."] <- NA
```

L'altre objecte del paquet `naniar` és `common_na_strings` veiem els formats que acostumen a prendre vectors de caràcter.

```{r}
naniar::common_na_strings
```


Com fer les modificacions

```{r eval = F}
na_if(polity$polity, -77)
```

Canviar valor per `NA`

```{r eval = F}
tidyr::replace_na()
tidyr::
```


### Observacions perdudes

Existeix un tipus particular de dades perdudes que se'n diuen observacions perdudes. Això succeeix quan tota una observació hi hauria de ser però no hi és: hi ha una fila sencera que hi hauria de ser però l'observació no existeix. Ho comprendrem ràpidament amb la @tbl-fr-complete. Tenim dades de França els anys 1980, 1981, 1983 i 1984, però l'observació de 1982 no existeix. 

```{r echo = F}
#| column: margin
#| label: tbl-fr-complete
#| tbl-cap: Holi
tribble(~country, ~year, ~democracy, ~duration,
        "France", 1980, 10, 133,
        "France", 1981, 10, 134,
        "France", 1983, 10, 136,
        "France", 1984, 10, 137) |> 
  kable()
```

La manera més senzilla per descobrir aquestes dades és quan tenim les dades ordenades (observacions a les files i variables a les columnes) i tenim clara quina és la unitat d'observació. Com veurem més endavant, hi ha funcions que ens permeten fer sortir de l'amagatall aquestes observacions, encara que això farà que creixi el nombre de `NA`.

Dades que estan perdudes però no com a NA, simplement no hi són. Són observacions perdudes.

-	L’observació França any 1980 no hi és però als altres països sí.
- No tenim l'observació quan la migració és zero.
- Passem un questionari als estudiants de classe i 20 no retornen.







## Per què estan perdudes?

Hi pot haver diverses raons per les quals les dades estan perdudes. Esbrinar-ne el motiu és important a l'hora de decidir què fer amb elles.

Com a definció, les dades perdudes són valors que haurien d'haver estat registrats però no ho han estat per algun motiu. 

-	No resposta en enquestes.
-	Problemes tècnics a l’hora de recollir les dades.
-	Ajuntar dades de diferents fonts.

Arribats a aquest punt, la gran pregunta és: què fem amb les dades perdudes? No hi ha una única resposta a aquesta pregunta i dependrà en bona part de la possibilitat d’esbrinar quines són les dades que falten. 

- Eliminar
- Substituir

El cas és que hem de prendre alguna decisió sobre com recodificar aquests valors.

En qualsevol cas, el resultat d’imputar missing data sempre serà inferior a no tenir-ne des d’un primer moment.

Eliminar les files que continguin `NA` en una determinada columna.

```{r eval = F}
tidyr::drop_na()
```



### Motiu no aleatori

El més comú és que les dades perdudes estiguin associades amb alguna característica de les unitats que estem estudiant (a aquest tipus se'n diu Missing At Random (MAR)). L’existència de dades perdudes i, sobretot, la manera com les tractem, pot generar un biaix de selecció important si tenim en compte que la seva absència té a veure amb les característiques de la unitat d’anàlisi. Per entendre de què estem parlant, fixem-nos amb la @fig-missing, on hem classificat tots els països de la @tbl-missing segons si les dades estan o no perdudes i segons els nivells de renda dels països (columna `income`). Com podeu veure, les dades perdudes es concentren en països de renda baixa, mentre que podríem dir que disposem de pràcticament totes les dades en països de renda alta. 

```{r echo = F}
#| fig-cap: Holi
#| label: fig-missing
#| fig-width: 9
#| fig-height: 4
missing |> 
  mutate(missing_unempl = if_else(is.na(fem_unempl), "Perdudes", "No Perdudes"),
         income = fct_relevel(income, c("High income", "Upper middle income", "Lower middle income", "Low income"))) |> 
  ggplot(aes(x = fct_rev(income), fill = missing_unempl)) +
  geom_bar(position = "dodge") +
  coord_flip() +
  labs(y = NULL, x = NULL)
```

Per què això és així? La majoria de les dades que publiquen organitzacions internacionals com el Banc Mundial no estan recopil·lades de manera primària per aquestes mateixes organitzacions, sinó que són els estats els encarregats de proporcionar-les. I com veiem, el fet que alguns estats no reportin les dades obeeix a un patró clar: la disponibilitat i també la qualitat de les dades està clarament relacionada amb la capacitat organitzativa de l’estat [@Bates2008]. Serà més probable que ens trobem dades disponibles allà on l’estat és fort, arriba a tot el territori i es pot permetre una administració i una tecnologia suficient per recollir tota aquesta informació. En canvi, en estats petits, fràgils o amb un nivell baix de desenvolupament serà molt més habitual trobar-nos amb dades perdudes.

El baix existent en moltes dades va relacionat amb la capacitat o la voluntat de l'administració de recollir les dades. 

- Durkheim.

Ja hem vist que dades socioeconòmiques com podrien ser la taxa d’homicidis, el nombre de persones sense llar o la taxa de robatoris poden estar relacionades amb la capacitat d’un país, una regió o una ciutat de recollir aquestes dades. Però la falta de registre d’algunes dades també pot tenir intencionalitat política: un país pot decidir no reportar les relacions comercials amb un altre estat si les seves relacions diplomàtiques són més aviat conflictives [@Barbieri2009] o els votants d’un determinat partit poden ser més propensos a no respondre què van votar en les darreres eleccions que els votants d’altres partits.  


Hi ha casos molt diversos de dades perdudes MAR. Per exemple, 


La manera com tractem les dades perdudes 

Quan l'explicació de per què les dades estan perdudes depen d'una altra variable que podem observar, no és recomanat eliminar-les. **Eliminar** l’observació sencera, però correm el risc que les nostres dades pateixin un biaix de selecció important, ja que una part de la població de referència amb una característica concreta estarà infra-representada. La millor opció és **substituir** les dades perdudes per unes altres. En alguns casos, haurem de considerar quanta fiabilitat sacrifiquem a expenses de la validesa que guanyem en els resultats. Vegem algunes situacions que exemplifiquen aquesta disjuntiva:  

-	No tenim dades del PIB de Tonga de l’any 2009, però sí que les tenim dels anys 2008 i 2010. Fem la mitjana d’aquests dos anys per obtenir-les.
-	El Banc Mundial no ofereix dades del PIB de Tuvalu però una web del Ministeri d’Economia de Tuvalu sí. No tenim garanties de com han estat recollides les dades, però decidim substituir-les per evitar tenir aquesta dada com a perduda.
-	La base de dades de democràcia Polity IV que estem utilitzant no ofereix dades de la democràcia a Andorra. Busquem les dades d’Andorra en una altra base de dades de democràcia (Freedom House, V-Dem...), encara que l’escala dels indicadors no coincideixi (per exemple, la Polity IV els valors es mouen de -10 a +10 i la Freedom House de 0 a 100, pel qual haurem d’aplicar algun mètode per transformar les escales).
Una darrera opció és imputar-les mitjançant un tractament estadístic. En aquest cas, inferim el seu valor a partir d’altra informació del marc de dades. El manual editat per l’Organització per la Cooperació i el Desenvolupament a Europa Handbook on Constructing Composite Indicators [@OECD2008: 55–63] ofereix diversos mètodes per imputar nous valors.  


Substituir per un nombre:

-	Imputar la mitjana.
-	Buscar la dada en una base de dades semblant.
-	Crear un model.




::: {.callout-note}
## Relació amb variable no observada
El problema més greu que podem tenir amb les dades perdudes és quan la reó per la qual les dades estan perdudes té a veure està sistemàticament relacionat amb dades no observades (Missing not at random (MNAR)).

Un valor no observat rellevant per l’avaluació que volem fer (depen de la mateixa variable).

-	Imputar: Bias. Inferència limitada.
-	Eliminar: Bias. Inferència limitada.
:::


filter(is.na())



### Motiu és aleatori

Normalment no és el cas. MCAR (Missing Completely at Random): La localització dels NA és totalment random, no estan associats amb cap variable observada o no observada.
En ciències socials, i en particular en els estudis internacionals, rarament ens trobarem que les dades perdudes siguin fruit d’algun error totalment aleatori. 

-	Imputar: La millor opció.
-	Eliminar: També (no crearà bias) no és problemàtic per a la validesa del nostre estudi, però reduirem la mostra. 



### Algunes unitats no hi són

**França, democràcia, imputar? Només dir que podem fer coses més avançades amb naniar o simputation.**


Combinacions de variables perdudes o NA en aquestes combinacions.

-	`complete()` a dins posem la combinació de variables que s’hauria de completar (Ex. country, year).
-	`fill()` per defecte, ho omple amb l’última observació. Omplir amb els valors anteriors o posteriors.
   - NA que es pot deduir perquè està en una combinació.
   - Va bé per categoriques.

Per exemple, si tenim dades de França l'any 2009 i l'any 2011, però no del 2010, podem deduir el valor de 2010 a partir de les dades dels anys anteriors i posteriors.

```{r}
fr <- tribble(~country, ~year, ~democracy, ~duration,
        "France", 1980, 10, 133,
        "France", 1981, 10, 134,
        "France", 1983, 10, 136,
        "France", 1984, 10, 137)

complete(fr, country, 
         year = first(year):last(year),
         fill = list(democracy = 10, duration = 135))
```


Imputar amb una regressió lineal.


